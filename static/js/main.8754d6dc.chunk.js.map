{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","addMovie","moviesAlredyExist","setMoviesAlredyExist","useState","movieTitle","setMovieTitle","undefined","serverData","setServerData","errorMessage","setErrorMessage","titleHandler","useCallback","event","target","value","addMovieHandler","searchHandler","preventDefault","fetch","then","response","json","getMovie","res","Response","htmlFor","type","id","placeholder","onChange","onClick","App","setMovies","findIndex","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8754d6dc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (arg0: Movie)=> void;\n  moviesAlredyExist: boolean;\n  setMoviesAlredyExist: (arg0: boolean) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie, moviesAlredyExist, setMoviesAlredyExist } = props;\n  const [movieTitle, setMovieTitle] = useState('');\n  const [serverData, setServerData] = useState<Movie | undefined>(undefined);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const titleHandler = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setMovieTitle(event.target.value);\n      setErrorMessage('');\n    }, [movieTitle],\n  );\n\n  const addMovieHandler = useCallback(\n    () => {\n      if (serverData !== undefined) {\n        addMovie(serverData);\n        setServerData(undefined);\n        setMovieTitle('');\n      }\n    }, [serverData],\n  );\n\n  const searchHandler = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n      getMovie(movieTitle)\n        .then((res) => {\n          if (res.Response === 'False') {\n            setErrorMessage(\"Can't find a movie with such a title\");\n\n            return;\n          }\n\n          setMoviesAlredyExist(false);\n          setServerData(res);\n        });\n    }, [movieTitle],\n  );\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={errorMessage ? 'input is-danger' : 'input'}\n              value={movieTitle}\n              onChange={titleHandler}\n            />\n          </div>\n          <p className=\"help is-danger\">\n            {errorMessage}\n          </p>\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchHandler}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovieHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {moviesAlredyExist\n          ? <span className=\"movie\">Movie is alredy in the list</span>\n          : serverData !== undefined && <MovieCard movie={serverData} /> }\n      </div>\n    </>\n  );\n};\n","const baseUrl = 'https://www.omdbapi.com/?apikey=607d267f&t';\n\nexport const getMovie = (movieTitle:string) => {\n  return fetch(`${baseUrl}=${movieTitle}`)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [moviesAlredyExist, setMoviesAlredyExist] = useState(false);\n\n  const addMovie = (movie:Movie) => {\n    if (movies.findIndex(el => movie.imdbID === el.imdbID) === -1) {\n      setMovies([...movies, movie]);\n    } else {\n      setMoviesAlredyExist(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          moviesAlredyExist={moviesAlredyExist}\n          setMoviesAlredyExist={setMoviesAlredyExist}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}